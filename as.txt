minWay from to graph = minWay' from to graph (startTable from graph []) where
  startTable from [] result = result
  startTable from ((a, b, c):t) result
    | a == from = 
    | otherwise = 
  minWay' from to (h)

in1 = 
  [(1, 2, 1), 
  (1, 5, 30), 
  (1, 6, 15), 
  (2, 3, 2), 
  (3, 4, 3), 
  (3, 9, 10), 
  (4, 5, 4), 
  (5, 8, 14), 
  (6, 5, 85), 
  (6, 7, 4), 
  (7, 5, 2)]
in2 = [(1, 2, 100), (1, 5, 30), (1, 6, 15), (2, 3, 2), (3, 4, 3), (3, 9, 10), (4, 5, 4), (5, 8, 14), (6, 5, 85), (6, 7, 4), (7, 5, 2)]

listOfWays from graph = kk from graph [] where
  kk from ((a,b,c):t) result
    | from == a = result
    | otherwise = kk from t (():(a,(-1)):result)

minWay from to graph knowWay
  | from == to = 0
  | otherwise = minWay (newCur from knowWayTo) to graph knowWay
  
newCur from (a, (b, c))
  
  
lenWay a b 
lenWay a b (h:t)
  | 

wayFrom from ((a,b,c):t)
  | from == h
  
  
  
  